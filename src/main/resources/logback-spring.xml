<?xml version="1.0" encoding="UTF-8"?>
<configuration  scan="true" scanPeriod="30 seconds">
    <!--定义日志文件的存储地址 -->
    <property name="LOG_HOME" value="${LOG_PATH}"/>
    <property name="LOG_FILE" value="${LOG_FILE}"/>
    <property name="FILE_LEVEL" value="INFO"/>
    <property name="PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss SSS}][%thread][${LOG_FILE}][%highlight(%-5level)][%t][%class{32}:%line] %m %n"/>
    <!-- 日志输出的通道 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder 默认配置为PatternLayoutEncoder -->
        <encoder>
            <pattern>${PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 输出到文件 -->
    <appender name="FileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${LOG_FILE}.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--设置日志级别,过滤掉info日志,只输入error日志-->
            <level>Info</level>
        </filter>
        <encoder>
            <pattern>${PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天分文件夹存放 ，并压缩 -->
            <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/${LOG_FILE}_%i.log</fileNamePattern>
            <!-- 每个文件的最大值 10MB,超过则编号,生成新文件 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 例如，假设每天滚动，且 maxHistory 是 7，则只 保留最近 7 天的归档文件，删除之前的文件。 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!--Error文件输出-->
    <!-- 按照每天和固定大小(50MB)生成日志文件【最新的日志，是日期最大数字最大的】 -->
    <appender name="FileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${LOG_FILE}_error.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!--设置日志级别,过滤掉info日志,只输入error日志-->
            <level>ERROR</level>
        </filter>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/${LOG_FILE}_error_%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--日志文件最大的大小-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--格式化输出-->
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>${PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="FileInfoLog"/>
        <appender-ref ref="FileErrorLog"/>
        <appender-ref ref="STDOUT"/>
    </root>
    <!--程序日志-->
    <logger name="com.sshs" level="DEBUG"></logger>
</configuration>