<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.sshs.system.dictionary.mapper.DictionaryMapper">
	<!-- mybsits_config中配置的alias类别名,也可直接配置resultType为类路劲 -->
	<!--表名 -->
	<sql id="tableName">
		SYS_DICTIONARY
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		DICT_ID ,
		PARENT_ID ,
		DICT_TYPE ,
		DICT_CODE ,
		DICT_NAME ,
		DICT_DESC ,
		STATUS ,
		SORT_NO ,
		IS_SYSTEM ,
		MODULE ,
		LEGAL_ORG ,
		CRT_USER_CODE ,
		CRT_ORG_CODE ,
		CRT_DATE ,
		UPD_USER_CODE ,
		UPD_ORG_CODE ,
		UPD_DATE
	</sql>

	<!--<select id="findById" parameterType="int" resultType="Dictionary">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		user_id=#{id}
	</select>-->
	<!-- 初始化字典项 根据dictCode查询 -->
	<!--<select id="findByDictCode" parameterType="String" resultType="Dictionary">
		SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE DICT_TYPE='1' AND DICT_CODE=#{dictCode}
	</select>-->

	<!-- 初始化字典项 根据parentId查询 -->
	<!--<select id="findByParentId" parameterType="java.lang.String"
		resultType="Dictionary">
		SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE PARENT_ID=#{parentId} order by
		sort_no asc
	</select>-->
	<!-- 初始化所有字典项目 -->
	<!--<select id="findAllDictCodes" resultType="Dictionary">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName">
		</include>
		where DICT_TYPE='1' and STATUS='1'
	</select>-->

	<!-- 初始化所有字典项目 -->
	<!--<select id="findI18nByDictId" parameterType="String" resultType="DictionaryI18n">
		select I18N_ID,
		DICT_ID,
		DICT_CODE,
		LANGUAGE,
		COUNTRY,
		DICT_NAME,
		DICT_DESC,
		STATUS,
		LEGAL_ORG,
		UPD_USER_CODE,
		UPD_DATE
		from
		SYS_DICTIONARY_I18N
		where DICT_ID=#{dictId}
	</select>-->

	<!-- 分页查询系统管理->系统管理-数据字典表-查询列信息 -->
	<select id="findForList" parameterType="com.sshs.core.page.Page"
			resultType="com.sshs.system.dictionary.model.Dictionary">
		SELECT
		<include refid="Field"></include>
		FROM
		<include refid="tableName"></include>
		WHERE 1=1
		<if test="dictId != null and dictId != ''">
			AND DICT_ID
			<choose>
				<when test="operators.dictId != null and operators.dictId != '' ">${operators.dictId}</when>
				<otherwise> = </otherwise>
			</choose>
			#{dictId}
		</if>
		<if test="module != null and module != ''">
			AND MODULE
			<choose>
				<when test="operators.module != null and operators.module != '' ">${operators.module}</when>
				<otherwise> = </otherwise>
			</choose>
			#{module}
		</if>
		<if test="legalOrg != null and legalOrg != ''">
			AND LEGAL_ORG
			<choose>
				<when test="operators.legalOrg != null and operators.legalOrg != '' ">${operators.legalOrg}</when>
				<otherwise> = </otherwise>
			</choose>
			#{legalOrg}
		</if>
		<if test="crtUserCode != null and crtUserCode != ''">
			AND CRT_USER_CODE
			<choose>
				<when test="operators.crtUserCode != null and operators.crtUserCode != '' ">${operators.crtUserCode}</when>
				<otherwise> = </otherwise>
			</choose>
			#{crtUserCode}
		</if>
		<if test="crtOrgCode != null and crtOrgCode != ''">
			AND CRT_ORG_CODE
			<choose>
				<when test="operators.crtOrgCode != null and operators.crtOrgCode != '' ">${operators.crtOrgCode}</when>
				<otherwise> = </otherwise>
			</choose>
			#{crtOrgCode}
		</if>
		<if test="crtDate != null and crtDate != ''">
			AND CRT_DATE
			<choose>
				<when test="operators.crtDate != null and operators.crtDate != '' ">${operators.crtDate}</when>
				<otherwise> = </otherwise>
			</choose>
			#{crtDate}
		</if>
		<if test="updUserCode != null and updUserCode != ''">
			AND UPD_USER_CODE
			<choose>
				<when test="operators.updUserCode != null and operators.updUserCode != '' ">${operators.updUserCode}</when>
				<otherwise> = </otherwise>
			</choose>
			#{updUserCode}
		</if>
		<if test="updOrgCode != null and updOrgCode != ''">
			AND UPD_ORG_CODE
			<choose>
				<when test="operators.updOrgCode != null and operators.updOrgCode != '' ">${operators.updOrgCode}</when>
				<otherwise> = </otherwise>
			</choose>
			#{updOrgCode}
		</if>
		<if test="updDate != null and updDate != ''">
			AND UPD_DATE
			<choose>
				<when test="operators.updDate != null and operators.updDate != '' ">${operators.updDate}</when>
				<otherwise> = </otherwise>
			</choose>
			#{updDate}
		</if>
		<if test="parentId != null and parentId != ''">
			AND PARENT_ID
			<choose>
				<when test="operators.parentId != null and operators.parentId != '' ">${operators.parentId}</when>
				<otherwise> = </otherwise>
			</choose>
			#{parentId}
		</if>
		<if test="dictType != null and dictType != ''">
			AND DICT_TYPE
			<choose>
				<when test="operators.dictType != null and operators.dictType != '' ">${operators.dictType}</when>
				<otherwise> = </otherwise>
			</choose>
			#{dictType}
		</if>
		<if test="dictCode != null and dictCode != ''">
			AND DICT_CODE
			<choose>
				<when test="operators.dictCode != null and operators.dictCode != '' ">${operators.dictCode}</when>
				<otherwise> = </otherwise>
			</choose>
			#{dictCode}
		</if>
		<if test="dictName != null and dictName != ''">
			AND DICT_NAME
			<choose>
				<when test="operators.dictName != null and operators.dictName != '' ">${operators.dictName}</when>
				<otherwise> = </otherwise>
			</choose>
			#{dictName}
		</if>
		<if test="dictDesc != null and dictDesc != ''">
			AND DICT_DESC
			<choose>
				<when test="operators.dictDesc != null and operators.dictDesc != '' ">${operators.dictDesc}</when>
				<otherwise> = </otherwise>
			</choose>
			#{dictDesc}
		</if>
		<if test="status != null and status != ''">
			AND STATUS
			<choose>
				<when test="operators.status != null and operators.status != '' ">${operators.status}</when>
				<otherwise> = </otherwise>
			</choose>
			#{status}
		</if>
		<if test="sortNo != null and sortNo != ''">
			AND SORT_NO
			<choose>
				<when test="operators.sortNo != null and operators.sortNo != '' ">${operators.sortNo}</when>
				<otherwise> = </otherwise>
			</choose>
			#{sortNo}
		</if>
		<if test="isSystem != null and isSystem != ''">
			AND IS_SYSTEM
			<choose>
				<when test="operators.isSystem != null and operators.isSystem != '' ">${operators.isSystem}</when>
				<otherwise> = </otherwise>
			</choose>
			#{isSystem}
		</if>
	</select>
</mapper>